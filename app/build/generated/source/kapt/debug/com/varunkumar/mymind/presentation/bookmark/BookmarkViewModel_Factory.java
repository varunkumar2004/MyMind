// Generated by Dagger (https://dagger.dev).
package com.varunkumar.mymind.presentation.bookmark;

import android.content.Context;
import com.google.mlkit.vision.text.TextRecognizer;
import com.varunkumar.mymind.data.BookmarkRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class BookmarkViewModel_Factory implements Factory<BookmarkViewModel> {
  private final Provider<BookmarkRepository> bookmarkRepositoryProvider;

  private final Provider<TextRecognizer> textRecognizerProvider;

  private final Provider<Context> contextProvider;

  public BookmarkViewModel_Factory(Provider<BookmarkRepository> bookmarkRepositoryProvider,
      Provider<TextRecognizer> textRecognizerProvider, Provider<Context> contextProvider) {
    this.bookmarkRepositoryProvider = bookmarkRepositoryProvider;
    this.textRecognizerProvider = textRecognizerProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public BookmarkViewModel get() {
    return newInstance(bookmarkRepositoryProvider.get(), textRecognizerProvider.get(), contextProvider.get());
  }

  public static BookmarkViewModel_Factory create(
      Provider<BookmarkRepository> bookmarkRepositoryProvider,
      Provider<TextRecognizer> textRecognizerProvider, Provider<Context> contextProvider) {
    return new BookmarkViewModel_Factory(bookmarkRepositoryProvider, textRecognizerProvider, contextProvider);
  }

  public static BookmarkViewModel newInstance(BookmarkRepository bookmarkRepository,
      TextRecognizer textRecognizer, Context context) {
    return new BookmarkViewModel(bookmarkRepository, textRecognizer, context);
  }
}
