// Generated by Dagger (https://dagger.dev).
package com.varunkumar.mymind.di;

import com.varunkumar.mymind.data.BookmarkDao;
import com.varunkumar.mymind.data.BookmarkDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideBookmarkDaoFactory implements Factory<BookmarkDao> {
  private final Provider<BookmarkDatabase> databaseProvider;

  public AppModule_ProvideBookmarkDaoFactory(Provider<BookmarkDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public BookmarkDao get() {
    return provideBookmarkDao(databaseProvider.get());
  }

  public static AppModule_ProvideBookmarkDaoFactory create(
      Provider<BookmarkDatabase> databaseProvider) {
    return new AppModule_ProvideBookmarkDaoFactory(databaseProvider);
  }

  public static BookmarkDao provideBookmarkDao(BookmarkDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideBookmarkDao(database));
  }
}
