// Generated by Dagger (https://dagger.dev).
package com.varunkumar.mymind.presentation.share;

import com.varunkumar.mymind.data.BookmarkRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ShareReceiverActivity_MembersInjector implements MembersInjector<ShareReceiverActivity> {
  private final Provider<BookmarkRepository> bookmarkRepositoryProvider;

  public ShareReceiverActivity_MembersInjector(
      Provider<BookmarkRepository> bookmarkRepositoryProvider) {
    this.bookmarkRepositoryProvider = bookmarkRepositoryProvider;
  }

  public static MembersInjector<ShareReceiverActivity> create(
      Provider<BookmarkRepository> bookmarkRepositoryProvider) {
    return new ShareReceiverActivity_MembersInjector(bookmarkRepositoryProvider);
  }

  @Override
  public void injectMembers(ShareReceiverActivity instance) {
    injectBookmarkRepository(instance, bookmarkRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.varunkumar.mymind.presentation.share.ShareReceiverActivity.bookmarkRepository")
  public static void injectBookmarkRepository(ShareReceiverActivity instance,
      BookmarkRepository bookmarkRepository) {
    instance.bookmarkRepository = bookmarkRepository;
  }
}
